<project xmlns:ivy="antlib:org.apache.ivy.ant">

  <!-- unzip all the dependent jars into target/ so that the final jar will depend on nothing. kinda evil. -->
  <target name="pack-deps" if="pack.deps">
    <pathconvert pathsep="," property="deps.path.list">
      <path refid="deps.path" />
      <map from="/" to="" />
    </pathconvert>
    <unzip dest="${target.dir}/classes">
      <fileset dir="/" includes="${deps.path.list}" />
    </unzip>
    <delete dir="${target.dir}/classes/META-INF" />
  </target>

  <target name="make-non-executable-jar" unless="ivy.extra.jarclassname" depends="pack-deps">
    <jar destfile="${dist.dir}/${jar.name}.jar">
      <fileset dir="${target.dir}/classes" />
    </jar>
  </target>

  <!-- generate a jar that contains all deps inside it, so it can be run with "java -jar" -->
  <target name="make-executable-jar" if="ivy.extra.jarclassname" depends="copy-extra,pack-deps">
    <pathconvert refid="deps.path" pathsep=" " property="deps.path.jar-format">
      <chainedmapper>
        <flattenmapper />
        <globmapper from="*" to="libs/*" />
      </chainedmapper>
    </pathconvert>
    <jar destfile="${dist.dir}/${jar.name}.jar">
      <fileset dir="${target.dir}/classes" />
      <manifest>
        <attribute name="Main-Class" value="${ivy.extra.jarclassname}" />
        <attribute name="Class-Path" value="${deps.path.jar-format}" />
      </manifest>
    </jar>
  </target>

  <target name="generate-scripts" depends="prepare" if="generate.scripts">
    <pathconvert refid="deps.path" property="classpath" />
    <pathconvert refid="test.path" property="test.classpath" />
    <pathconvert refid="deps.path" property="deps.path.dist-format">
      <chainedmapper>
        <flattenmapper />
        <globmapper from="*" to="$${DIST_HOME}/libs/*" />
      </chainedmapper>
    </pathconvert>

    <!-- delete dir="${basedir}/target/scripts" /-->
    <mkdir dir="${dist.dir}/scripts" />
    <copy todir="${dist.dir}/scripts" overwrite="true">
      <fileset dir="${basedir}/src/scripts" />
      <filterset>
        <filter token="CLASSPATH" value="${classpath}:${target.dir}/classes" />
        <filter token="TEST_CLASSPATH" value="${test.classpath}:${target.dir}/classes:${target.dir}/test-classes" />
        <filter token="DIST_CLASSPATH" value="${deps.path.dist-format}:$${DIST_HOME}/${jar.name}.jar" />
        <filter token="TARGET" value="${target.dir}" />
        <filter token="DIST_NAME" value="${dist.name}" />
      </filterset>
    </copy>
    <chmod dir="${dist.dir}/scripts" includes="*" perm="ugo+x" />
  </target>

  <target name="package" depends="test, make-non-executable-jar, make-executable-jar,
    generate-scripts, docs" description="build complete jar(s) and docs">
    <ivy:makepom ivyfile="${basedir}/ivy/ivy.xml" pomfile="${dist.dir}/${dist.name}.pom">
      <mapping conf="*" scope="runtime" />
      <mapping conf="bootstrap" scope="compile" />
      <mapping conf="test" scope="compile" />
    </ivy:makepom>
    <ivy:deliver conf="*(public)" />
    <condition property="dist.tarball.name"
               value="${ivy.module}-${revision-short}.tar.bz2"
               else="${dist.name}.tar.bz2">
      <isset property="dist.build_integration" />
    </condition>
    <tar destfile="${basedir}/dist/${dist.tarball.name}"
         basedir="${basedir}/dist" compression="bzip2">
      <include name="${dist.name}/${jar.name}.jar" />
      <include name="${dist.name}/*.so" />
      <include name="${dist.name}/*.jnilib" />
      <include name="${dist.name}/libs/**" />
      <include name="${dist.name}/config/**" />
      <include name="${dist.name}/scripts/**" />
    </tar>
    <ivy:publish resolver="local" overwrite="true">
      <artifacts pattern="${dist.dir}/[artifact]-[revision].[ext]" />
    </ivy:publish>
  </target>

  <target name="jars" depends="package" />

  <target name="dist" depends="package" description="create a source distribution zipfile">
    <copy todir="${dist.dir}" failonerror="false">
      <fileset dir="${basedir}" includes="INSTALL* LICENSE* README* build.xml" />
    </copy>
    <copy todir="${dist.dir}/src">
      <fileset dir="src" />
    </copy>
    <copy todir="${dist.dir}/ivy">
      <fileset dir="ivy" />
    </copy>
    <copy todir="${dist.dir}/ant">
      <fileset dir="ant" />
    </copy>
    <zip destfile="${basedir}/dist/${ivy.module}-${ivy.revision}-src.zip"
      basedir="${basedir}/dist"
      includes="${ivy.module}-${ivy.revision}/**"
      excludes="${ivy.module}-${ivy.revision}/libs/** ${ivy.module}-${ivy.revision}/*.jar" />
  </target>

  <target name="push" depends="package" description="push built jar(s) to the repository">
    <condition property="pubrevision"
               value="${ivy.revision}-${build.timestamp.date}-${revision-short}"
               else="${ivy.revision}">
      <isset property="push.build_name" />
    </condition>
    <ivy:publish resolver="push" overwrite="true" pubrevision="${pubrevision}" update="true">
      <artifacts pattern="${dist.dir}/[artifact]-${ivy.revision}.[ext]" />
    </ivy:publish>
  </target>
</project>
